before_script:
  - 'which ssh-agent || ( apt-get install -qq openssh-client )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

stages:
  - production

prod_deploy:
  stage: production
  script:
    - ssh $SSH_USERNAME_PROD@$SSH_HOST_PROD "cd $BE_ROOT_PATH
      && git reset --hard HEAD && git checkout master
      && git pull origin master
      && docker run -u $(id -u ${USER}):$(id -g ${USER}) --rm --interactive --volume $BE_ROOT_PATH:/app composer install --ignore-platform-reqs --no-scripts
      && DOCKER_USER=$(id -u):$(id -g) docker-compose -f "docker/docker-compose.yml" pull
      && DOCKER_USER=$(id -u):$(id -g) docker-compose -f "docker/docker-compose.yml" up -d
      && docker exec -u $(id -u ${USER}):$(id -g ${USER}) poker_php php artisan cache:clear
      && docker exec -u $(id -u ${USER}):$(id -g ${USER}) poker_php php artisan route:cache
      && docker exec -u $(id -u ${USER}):$(id -g ${USER}) poker_php php artisan config:clear
      && docker exec -u $(id -u ${USER}):$(id -g ${USER}) poker_php php artisan view:cache
      && docker exec -u $(id -u ${USER}):$(id -g ${USER}) poker_php php vendor/bin/phpunit
      && exit
      "
  only:
    - master
